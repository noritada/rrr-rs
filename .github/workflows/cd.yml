name: CD

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macOS-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup Rust
      uses: hecrj/setup-rust-action@v1.3.4
      with:
        rust-version: ${{ matrix.rust }}
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup musl
      if: matrix.os == 'ubuntu-latest'
      run: |
        rustup target add x86_64-unknown-linux-musl
        sudo apt -qq install musl-tools
    - name: Build
      run: cargo build --all --release --target ${{ matrix.target }} --verbose
    - name: Create an archive to maintain the file permission (in non-Windows environments)
      if: matrix.target != 'x86_64-pc-windows-msvc'
      run: |
        tar -C target/${{ matrix.target }}/release -cvf rrr-${{ matrix.target }}.tar.xz rrr
    - name: Create an archive to maintain the file permission (in Windows environments)
      if: matrix.target == 'x86_64-pc-windows-msvc'
      run: |
        powershell Compress-Archive -Path target/${{ matrix.target }}/release/rrr.exe -DestinationPath rrr-${{ matrix.target }}.zip
    - name: Upload artifacts (in non-Windows environments)
      if: matrix.target != 'x86_64-pc-windows-msvc'
      uses: actions/upload-artifact@v3
      with:
        name: rrr-${{ matrix.target }}
        path: rrr-${{ matrix.target }}.tar.xz
    - name: Upload artifacts (in Windows environments)
      if: matrix.target == 'x86_64-pc-windows-msvc'
      uses: actions/upload-artifact@v3
      with:
        name: rrr-${{ matrix.target }}
        path: rrr-${{ matrix.target }}.zip
